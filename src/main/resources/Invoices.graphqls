schema {
    query: Query
    mutation: Mutation
}

type Mutation {
      signinUser(auth: AuthData): SigninPayload
}

type User {
    id: ID!
    name: String!
    email: String
    password: String
}

input AuthData {
    email: String!
    password: String!
}

type SigninPayload {
    token: String
    user: User
}

type Query{
    invoice(id: ID): Invoice
    invoices(last_name: String, first_name: String, fromDate: String, toDate: String, status: String, email: String):[Invoice]
    turnoverByDate(fromDate: String, toDate: String, status: String):Amount
    turnoverForCoins(fromDate: String, toDate: String, status: String, info:String):CryptoCurrencies
    turnoverForEndpoints(email: String, last_name: String, first_name: String):[Endpoint]

}

type Amount{
    amount : Float
    info: String
}

type Endpoint{
    endpoint: String
    amount : Float
}

type CryptoCurrencies{
    btc: Float
    ltc: Float
    bch: Float
    dash: Float
    info: String
}

enum Currency{
    DASH
    BTC
    LTC
    BCH
}

type Invoice {
    id : ID
    uuid : String
    memo : String
    email : String
    first_name : String
    lastName : String
    status : String
    return_url : String
    callback_url : String
    expires_at : String
    created_at : String
    update_at : String
    seller_name : String
    amount : String
    currency : String
    payment : Invoice_Payments
    cancel_url : String
    extra_data : String
    endpoint : String
    doi : String
    ip : String
    option_timestamp: String
    selected_currencies : String
    endpoint_version : String
    note : String
}

type Invoice_Payments {
    id : ID
    invoice_id :Int
    uuid: String
    currency : String
    electrum_amount : Float
    electrum_id : String
    electrum_uri :String
    electrum_address : String
    electrum_expires_at : String
    created_at : String
    update_at :String
}



